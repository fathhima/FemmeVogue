<!DOCTYPE html>
<html lang="en">

<head>
	<title>Shoping Cart</title>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<!--===============================================================================================-->
	<link rel="icon" type="image/png" href="/images/icons/favicon.png" />
	<!--===============================================================================================-->
	<link rel="stylesheet" type="text/css" href="/vendor/bootstrap/css/bootstrap.min.css">
	<!--===============================================================================================-->
	<link rel="stylesheet" type="text/css" href="/fonts/font-awesome-4.7.0/css/font-awesome.min.css">
	<!--===============================================================================================-->
	<link rel="stylesheet" type="text/css" href="/fonts/iconic/css/material-design-iconic-font.min.css">
	<!--===============================================================================================-->
	<link rel="stylesheet" type="text/css" href="/fonts/linearicons-v1.0.0/icon-font.min.css">
	<!--===============================================================================================-->
	<link rel="stylesheet" type="text/css" href="/vendor/animate/animate.css">
	<!--===============================================================================================-->
	<link rel="stylesheet" type="text/css" href="/vendor/css-hamburgers/hamburgers.min.css">
	<!--===============================================================================================-->
	<link rel="stylesheet" type="text/css" href="/vendor/animsition/css/animsition.min.css">
	<!--===============================================================================================-->
	<link rel="stylesheet" type="text/css" href="/vendor/select2/select2.min.css">
	<!--===============================================================================================-->
	<link rel="stylesheet" type="text/css" href="vendor/perfect-scrollbar/perfect-scrollbar.css">
	<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
	<!-- Add SweetAlert2 CSS -->
	<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
	<!-- Add SweetAlert2 JS -->
	<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
	<!--===============================================================================================-->
	<link rel="stylesheet" type="text/css" href="/css/util.css">
	<link rel="stylesheet" type="text/css" href="/css/main.css">
	<!--===============================================================================================-->
</head>

<body class="animsition">

	<!-- Navbar -->
	<%- include("partials/navbar") %>

    <div class="checkout-container">
        <div class="address-section">
            <h2>Select Delivery Address</h2>
            
            <!-- All Addresses Section -->
            <div id="addresses-container">
                <!-- Default Address -->
                <div class="address-group">
                    <p class="section-label">DEFAULT ADDRESS</p>
                    <% if (addresses.find(addr => addr.isDefault)) { 
                        const defaultAddr = addresses.find(addr => addr.isDefault); %>
                        <div class="address-card" data-address-id="<%= defaultAddr._id %>">
                            <div class="radio-wrapper">
                                <input type="radio" name="selectedAddress" value="<%= defaultAddr._id %>" checked>
                                <div class="address-info">
                                    <div class="name-badge">
                                        <span class="name"><%= defaultAddr.name %></span>
                                        <span class="badge"><%= defaultAddr.addressType.toUpperCase() %></span>
                                    </div>
                                    <p class="address-line"><%= defaultAddr.address %></p>
                                    <p class="address-line">
                                        <%= defaultAddr.city %>, <%= defaultAddr.district %>, <%= defaultAddr.state %>, 
                                        <%= defaultAddr.country %> - <%= defaultAddr.postalCode %>
                                    </p>
                                    <p class="mobile">Mobile: <%= defaultAddr.phone %></p>
                                </div>
                            </div>
                        </div>
                    <% } %>
                </div>
    
                <!-- Other Addresses -->
                <div class="address-group">
                    <div id="other-addresses">
                        <% addresses.filter(addr => !addr.isDefault).forEach(addr => { %>
                            <div class="address-card" data-address-id="<%= addr._id %>">
                                <div class="radio-wrapper">
                                    <input type="radio" name="selectedAddress" value="<%= addr._id %>">
                                    <div class="address-info">
                                        <div class="name-badge">
                                            <span class="name"><%= addr.name %></span>
                                            <span class="badge"><%= addr.addressType.toUpperCase() %></span>
                                        </div>
                                        <p class="address-line"><%= addr.address %></p>
                                        <p class="address-line">
                                            <%= addr.city %>, <%= addr.district %>, <%= addr.state %>, 
                                            <%= addr.country %> - <%= addr.postalCode %>
                                        </p>
                                        <p class="mobile">Mobile: <%= addr.phone %></p>
                                    </div>
                                </div>
                            </div>
                        <% }) %>
                    </div>
                </div>
            </div>
    
            <!-- Add New Address Section -->
            <div class="new-address-section">
                <button class="add-address-btn">+ Add New Address</button>
                
                <div class="address-form" style="display: none;">
                    <div class="form-section">
                        <p class="section-label">CONTACT DETAILS</p>
                        <input type="text" id="name" placeholder="Name*" class="form-input" required>
                        <input type="tel" id="phone" placeholder="Mobile No*" class="form-input" required>
                    </div>
                    
                    <div class="form-section">
                        <p class="section-label">ADDRESS</p>
                        <input type="text" id="postalCode" placeholder="Pincode*" class="form-input" required>
                        <input type="text" id="address" placeholder="Address (House No, Building, Street, Area)*" class="form-input" required>
                        <input type="text" id="city" placeholder="City*" class="form-input" required>
                        <input type="text" id="district" placeholder="District*" class="form-input" required>
                        <input type="text" id="state" placeholder="State*" class="form-input" required>
                        <input type="text" id="country" placeholder="Country*" class="form-input" required>
                    </div>
                    
                    <div class="form-section">
                        <p class="section-label">ADDRESS TYPE</p>
                        <select id="addressType" class="form-input" required>
                            <option value="">Select Address Type</option>
                            <option value="home">Home</option>
                            <option value="work">Work</option>
                            <option value="other">Other</option>
                        </select>
                    </div>
                    
                    <div class="form-section">
                        <div class="flex">
                            <input type="checkbox" id="isDefault">
                            <label for="isDefault">Set as default address</label>
                        </div>
                    </div>
                    
                    <div class="form-section">
                        <button class="add-address-submit">ADD ADDRESS</button>
                    </div>
                </div>
            </div>
    
            <button class="continue-btn">Continue</button>
        </div>
    
        <!-- Order Summary Section -->
        <div class="order-summary">
            <div class="summary-header">
                <h2>Order Summary</h2>
                <a href="/cart" class="edit-link">Edit</a>
            </div>
            
            <div class="summary-row">
                <span>Subtotal</span>
                <span><%= subtotal %></span>
            </div>
            
            <div class="summary-row">
                <span>Shipping</span>
                <span>â‚¹99.00</span>
            </div>
            
            <div class="summary-row savings">
                <span>Total Savings</span>
                <span></span>
            </div>
            
            <div class="summary-row total">
                <span>Total</span>
                <span><%= finalTotal %> </span>
            </div>
        </div>
    </div>
    
    <style>
    .checkout-container {
        display: flex;
        max-width: 1200px;
        margin: 0 auto;
        margin-top: 80px;
        padding: 20px;
        padding-bottom: 50px;
        gap: 30px;
    }
    
    .address-section {
        flex: 2;
    }
    
    .order-summary {
        flex: 1;
        background: #f8f9fa;
        padding: 20px;
        border-radius: 8px;
        height: fit-content;
    }
    
    h2 {
        font-size: 24px;
        margin-bottom: 20px;
    }
    
    .section-label {
        color: #666;
        font-size: 12px;
        font-weight: 600;
        margin-bottom: 10px;
    }
    
    .address-card {
        border: 1px solid #ddd;
        padding: 20px;
        border-radius: 8px;
        margin-bottom: 20px;
        cursor: pointer;
        transition: all 0.3s ease;
    }
    
    .address-card:hover {
        background-color: #f8f9fa;
    }
    
    .address-card.selected {
        border-color: #3085d6;
        box-shadow: 0 0 0 2px rgba(48, 133, 214, 0.2);
    }
    
    .radio-wrapper {
        display: flex;
        gap: 15px;
    }
    
    .name-badge {
        display: flex;
        align-items: center;
        gap: 10px;
        margin-bottom: 10px;
    }
    
    .name {
        font-weight: 600;
    }
    
    .badge {
        background: #e8f3ff;
        color: #0066cc;
        padding: 2px 8px;
        border-radius: 12px;
        font-size: 12px;
    }
    
    .address-line {
        margin: 5px 0;
        color: #444;
    }
    
    .mobile {
        color: #666;
    }
    
    .add-address-btn {
        color: #ff3366;
        border: none;
        background: none;
        padding: 10px 0;
        cursor: pointer;
        font-weight: 500;
    }
    
    .form-input {
        width: 100%;
        padding: 12px;
        margin: 8px 0;
        border: 1px solid #ddd;
        border-radius: 4px;
    }
    
    .add-address-submit {
        background: #f0f0f0;
        border: none;
        padding: 12px 20px;
        width: 100%;
        border-radius: 4px;
        margin-top: 10px;
        cursor: pointer;
    }
    
    .continue-btn {
        background: #000;
        color: white;
        border: none;
        padding: 15px 30px;
        border-radius: 4px;
        cursor: pointer;
        margin-top: 20px;
        width: 100%;
    }
    
    .summary-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
    }
    
    .edit-link {
        color: #0066cc;
        text-decoration: none;
    }
    
    .summary-row {
        display: flex;
        justify-content: space-between;
        margin: 10px 0;
    }
    
    .savings {
        color: #00aa5b;
    }
    
    .total {
        font-weight: 600;
        border-top: 1px solid #ddd;
        padding-top: 10px;
        margin-top: 10px;
    }
    
    .flex {
        display: flex;
        align-items: center;
    }
    
    input[type="checkbox"] {
        margin-right: 0.5rem;
    }
    
    @media (max-width: 768px) {
        .checkout-container {
            flex-direction: column;
            margin-top: 40px;
        }
        
        .order-summary {
            margin-top: 30px;
        }
    }
    </style>
    
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        // Function to create address card HTML - Define this first!
function createAddressCard(address) {
    return `
        <div class="address-card" data-address-id="${address._id}">
            <div class="radio-wrapper">
                <input type="radio" name="selectedAddress" value="${address._id}">
                <div class="address-info">
                    <div class="name-badge">
                        <span class="name">${address.name}</span>
                        <span class="badge">${address.addressType.toUpperCase()}</span>
                    </div>
                    <p class="address-line">${address.address}</p>
                    <p class="address-line">
                        ${address.city}, ${address.district}, ${address.state}, 
                        ${address.country} - ${address.postalCode}
                    </p>
                    <p class="mobile">Mobile: ${address.phone}</p>
                </div>
            </div>
        </div>
    `;
}

// Function to attach click listeners to address cards
function attachAddressCardListeners() {
    const addressCards = document.querySelectorAll('.address-card');
    
    addressCards.forEach(card => {
        card.addEventListener('click', function(e) {
            // Don't trigger if clicking on buttons inside the card
            if (e.target.tagName === 'BUTTON') return;
            
            // Select the radio input
            const radio = this.querySelector('input[type="radio"]');
            if (radio) {
                radio.checked = true;
                
                // Update visual selection
                addressCards.forEach(c => c.classList.remove('selected'));
                this.classList.add('selected');
            }
        });
    });
}

// Add new address form toggle
document.querySelector('.add-address-btn').addEventListener('click', function() {
    const form = document.querySelector('.address-form');
    form.style.display = form.style.display === 'none' ? 'block' : 'none';
});

// Form submission handler
document.querySelector('.add-address-submit').addEventListener('click', async function(e) {
    e.preventDefault();

    // Gather form data
    const formData = {
        name: document.getElementById('name').value,
        phone: document.getElementById('phone').value,
        postalCode: document.getElementById('postalCode').value,
        address: document.getElementById('address').value,
        city: document.getElementById('city').value,
        district: document.getElementById('district').value,
        state: document.getElementById('state').value,
        country: document.getElementById('country').value,
        addressType: document.getElementById('addressType').value,
        isDefault: document.getElementById('isDefault').checked
    };

    // Validate required fields
    const requiredFields = ['name', 'phone', 'postalCode', 'address', 'city', 'district', 'state', 'country', 'addressType'];
    const emptyFields = requiredFields.filter(field => !formData[field]);

    if (emptyFields.length > 0) {
        Swal.fire({
            icon: 'error',
            title: 'Required Fields Missing',
            text: 'Please fill in all required fields marked with *',
            confirmButtonColor: '#3085d6'
        });
        return;
    }

    try {
        // Show loading state
        Swal.fire({
            title: 'Adding Address...',
            allowOutsideClick: false,
            didOpen: () => {
                Swal.showLoading();
            }
        });

        // Make POST request to add the new address
        const response = await axios.post('/profile/address', formData);
        const newAddress = response.data;

        // Add the new address to the appropriate section
        if (formData.isDefault) {
            // If it's default, refresh the page to reorganize addresses
            location.reload();
        } else {
            // Add to other addresses section
            const otherAddresses = document.getElementById('other-addresses');
            if (otherAddresses) {
                otherAddresses.insertAdjacentHTML('beforeend', createAddressCard(newAddress));
                attachAddressCardListeners();
            }
        }

        // Clear form fields manually
        const formFields = ['name', 'phone', 'postalCode', 'address', 'city', 'district', 'state', 'country', 'addressType'];
        formFields.forEach(field => {
            const input = document.getElementById(field);
            if (input) input.value = '';
        });
        
        // Reset checkbox
        const defaultCheckbox = document.getElementById('isDefault');
        if (defaultCheckbox) defaultCheckbox.checked = false;

        // Hide form
        const form = document.querySelector('.address-form');
        if (form) form.style.display = 'none';

        // Show success message
        Swal.fire({
            icon: 'success',
            title: 'Address Added Successfully',
            showConfirmButton: true,
            confirmButtonColor: '#3085d6'
        });

    } catch (error) {
        console.error('Error adding address:', error);
        
        let errorMessage = 'An unexpected error occurred. Please try again.';
        if (error.response) {
            switch (error.response.status) {
                case 400:
                    errorMessage = 'Invalid address details. Please check your input.';
                    break;
                case 401:
                    errorMessage = 'Please login to add an address.';
                    break;
                case 429:
                    errorMessage = 'Too many attempts. Please try again later.';
                    break;
                default:
                    errorMessage = error.response.data.message || errorMessage;
            }
        }

        Swal.fire({
            icon: 'error',
            title: 'Error Adding Address',
            text: errorMessage,
            confirmButtonColor: '#3085d6'
        });
    }
});

// Continue button handler
document.querySelector('.continue-btn').addEventListener('click', function() {
    const selectedAddress = document.querySelector('input[name="selectedAddress"]:checked');
    
    if (!selectedAddress) {
        Swal.fire({
            icon: 'warning',
            title: 'No Address Selected',
            text: 'Please select a delivery address to continue',
            confirmButtonColor: '#3085d6'
        });
        return;
    }

    // Get the full address data from the selected card
    const addressCard = selectedAddress.closest('.address-card');
    const addressData = {
        addressId: selectedAddress.value,
        name: addressCard.querySelector('.name').textContent,
        addressType: addressCard.querySelector('.badge').textContent,
        addressLine: addressCard.querySelector('.address-line').textContent,
        phone: addressCard.querySelector('.mobile').textContent.replace('Mobile: ', '')
    };

    // Store address data in sessionStorage
    sessionStorage.setItem('selectedAddress', JSON.stringify(addressData));

    // Proceed to payment page
    window.location.href = `/checkout/payment?addressId=${selectedAddress.value}`;
});

// Initialize address card listeners
document.addEventListener('DOMContentLoaded', function() {
    attachAddressCardListeners();
});
    </script>

<!-- Footer -->
<%-include("partials/footer")%>

<!-- Back to top -->
<div class="btn-back-to-top" id="myBtn">
    <span class="symbol-btn-back-to-top">
        <i class="zmdi zmdi-chevron-up"></i>
    </span>
</div>

<!--===============================================================================================-->
<script src="/vendor/jquery/jquery-3.2.1.min.js"></script>
<!--===============================================================================================-->
<script src="/vendor/animsition/js/animsition.min.js"></script>
<!--===============================================================================================-->
<script src="/vendor/bootstrap/js/popper.js"></script>
<script src="/vendor/bootstrap/js/bootstrap.min.js"></script>
<!--===============================================================================================-->
<script src="/vendor/select2/select2.min.js"></script>
<script>
    $(".js-select2").each(function () {
        $(this).select2({
            minimumResultsForSearch: 20,
            dropdownParent: $(this).next('.dropDownSelect2')
        });
    })
</script>
<!--===============================================================================================-->
<script src="/vendor/MagnificPopup/jquery.magnific-popup.min.js"></script>
<!--===============================================================================================-->
<script src="/vendor/perfect-scrollbar/perfect-scrollbar.min.js"></script>
<script>
    $('.js-pscroll').each(function () {
        $(this).css('position', 'relative');
        $(this).css('overflow', 'hidden');
        var ps = new PerfectScrollbar(this, {
            wheelSpeed: 1,
            scrollingThreshold: 1000,
            wheelPropagation: false,
        });

        $(window).on('resize', function () {
            ps.update();
        })
    });
</script>
<!--===============================================================================================-->
<script src="/js/main.js"></script>

</body>

</html>