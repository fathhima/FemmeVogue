<div class="container mx-auto p-4 mt-30">
    <h1 class="text-3xl font-bold mb-6">Wishlist</h1>
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
      <% if (user.wishlist.length > 0) { %>
        <% user.wishlist.forEach(product => { %>
          <div class="bg-white shadow-md rounded p-4">
            <img src="<%= product.image %>" alt="<%= product.name %>" class="w-full h-48 object-cover mb-4">
            <h3 class="text-lg font-medium mb-2"><%= product.name %></h3>
            <p class="text-gray-700 mb-4"><%= product.description %></p>
            <p class="text-green-600 font-bold mb-4">$<%= product.price %></p>
            <div class="flex justify-between items-center">
              <button class="remove-from-wishlist text-red-600 hover:text-red-800 focus:outline-none" data-product-id="<%= product.id %>">
                <i class="fa-solid fa-heart"></i> Remove from Wishlist
              </button>
              <button class="add-to-cart bg-blue-600 hover:bg-blue-800 text-white px-4 py-2 rounded focus:outline-none">
                <i class="fa-solid fa-cart-shopping"></i> Add to Cart
              </button>
            </div>
          </div>
        <% }) %>
      <% } else { %>
        <p>Your wishlist is empty.</p>
      <% } %>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.1.5/dist/sweetalert2.min.js"></script>
  <script>
    document.querySelectorAll('.remove-from-wishlist').forEach(btn => {
      btn.addEventListener('click', async (event) => {
        const productId = event.target.dataset.productId;
        try {
          await axios.delete(`/api/wishlist/${productId}`);
          Swal.fire({
            title: 'Success',
            text: 'Product removed from wishlist',
            icon: 'success',
            timer: 2000,
            showConfirmButton: false
          });
          event.target.closest('.bg-white').remove();
        } catch (error) {
          Swal.fire({
            title: 'Error',
            text: 'Failed to remove product from wishlist',
            icon: 'error',
            timer: 2000,
            showConfirmButton: false
          });
        }
      });
    });

    document.querySelectorAll('.add-to-cart').forEach(btn => {
      btn.addEventListener('click', async (event) => {
        const productId = event.target.dataset.productId;
        try {
          await axios.post('/api/cart', { productId });
          Swal.fire({
            title: 'Success',
            text: 'Product added to cart',
            icon: 'success',
            timer: 2000,
            showConfirmButton: false
          });
        } catch (error) {
          Swal.fire({
            title: 'Error',
            text: 'Failed to add product to cart',
            icon: 'error',
            timer: 2000,
            showConfirmButton: false
          });
        }
      });
    });
  </script>